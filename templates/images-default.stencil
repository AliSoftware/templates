// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

{% if images %}
#if os(iOS) || os(tvOS) || os(watchOS)
  import UIKit.UIImage
  typealias Image = UIImage
#elseif os(OSX)
  import AppKit.NSImage
  typealias Image = NSImage
#endif

// swiftlint:disable file_length
// swiftlint:disable line_length

protocol ImageConvertible {
  var image: Image { get }
}

extension ImageConvertible where Self: RawRepresentable, Self.RawValue == String {
  var image: Image {
    let bundle = NSBundle(forClass: BundleToken.self)
    #if os(iOS) || os(tvOS) || os(watchOS)
    return Image(named: rawValue, inBundle: bundle, compatibleWithTraitCollection: nil)!
    #elseif os(OSX)
    return bundle.imageForResource(rawValue)!
    #endif
  }
}
{% macro recursiveBlock images %}
  {% for image in images %}
  {% if not image.items %}
  case {{image.value|swiftIdentifier|escapeReservedKeywords}} = "{{image.value}}"
  {% else %}
  {% call recursiveBlock image.items %}
  {% endif %}
  {% endfor %}
{% endmacro %}

// swiftlint:disable type_body_length
enum {{enumName}}: String, ImageConvertible {
  {% for catalog in catalogs %}
  {% call recursiveBlock catalog.assets %}
  {% endfor %}
}
// swiftlint:enable type_body_length

private final class BundleToken {}
{% else %}
// No image found
{% endif %}
